package com.hello.netty.xieyi.client;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;

import com.hello.netty.xieyi.coder.NettyMessageDecoder;
import com.hello.netty.xieyi.coder.NettyMessageEncoder;

import io.netty.bootstrap.Bootstrap;
import io.netty.channel.ChannelInitializer;
import io.netty.channel.ChannelOption;
import io.netty.channel.EventLoopGroup;
import io.netty.channel.nio.NioEventLoopGroup;
import io.netty.channel.socket.SocketChannel;
import io.netty.channel.socket.nio.NioSocketChannel;
import io.netty.handler.timeout.ReadTimeoutHandler;

/**
 * netty 客户端
 * @author Administrator
 *
 */
public class NettyClient {
	
	private ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);//固定大小的线程池。
	
	EventLoopGroup group = new NioEventLoopGroup();
	
	/*客户端链接*/
	public void connect(int port,String host){
		Bootstrap b  = new Bootstrap();
		b.group(group).channel(NioSocketChannel.class)
		.option(ChannelOption.TCP_NODELAY, true)
		.handler(new ChannelInitializer<SocketChannel>() {

			@Override
			protected void initChannel(SocketChannel ch) throws Exception {
				ch.pipeline().addLast(new NettyMessageDecoder(1014*1024, 4, 4, -8, 0))
				.addLast("message Encoder ",new NettyMessageEncoder())
				.addLast("readTimeoutHander",new ReadTimeoutHandler(50))
				.addLast("loginAuthHandler", new LoginAuthReqHandler())
				.addLast("heartBeatHandler",new HeartBeatReqHandler());
			}
		});
		
		
	}
	
}
