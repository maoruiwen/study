package com.hello.netty.xieyi.coder;

import java.util.List;
import java.util.Map;

import com.hello.netty.xieyi.coder.util.MarshallingCodeCFactory;
import com.hello.netty.xieyi.coder.util.NettyMarshallingE;
import com.hello.netty.xieyi.entry.NettyMessage;

import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.ChannelHandlerContext;
import io.netty.handler.codec.MessageToMessageEncoder;

/**
 * 消息编码处理。
 * @author Administrator
 *
 */
public class NettyMessageEncoder extends MessageToMessageEncoder<NettyMessage> {
	private NettyMarshallingE marshallingEncoder;
	
	public  NettyMessageEncoder() {
		this.marshallingEncoder = MarshallingCodeCFactory.buildMarshallingEncoder();
	}
	
	@Override
	protected void encode(ChannelHandlerContext ctx, NettyMessage msg, List<Object> out) throws Exception {
		
		/*校验消息内容是否为空*/
		if(msg==null||msg.getHeader() == null){
			System.out.println("消息编码，消息体为空");
			throw new Exception("消息内容为空");
		}
			
		ByteBuf sendBuf = Unpooled.buffer();
		sendBuf.writeInt(msg.getHeader().getCrcCode());
		sendBuf.writeInt(msg.getHeader().getLength());
		sendBuf.writeLong(msg.getHeader().getSessionid());
		sendBuf.writeByte(msg.getHeader().getType());
		sendBuf.writeByte(msg.getHeader().getPriority());
		sendBuf.writeInt(msg.getHeader().getAttachment().size());//附件的长度
		
		String key = null;
		byte [] keyArray = null;
		Object value = null;
		
		/*写入自定义插件*/
		for(Map.Entry<String, Object>param:msg.getHeader().getAttachment().entrySet()){
			key = param.getKey();
			keyArray = key.getBytes();
			sendBuf.writeInt(keyArray.length);
			sendBuf.writeBytes(keyArray);
			value = param.getValue();
			marshallingEncoder.encode(ctx, value, sendBuf);
		}
		
		key = null;
		keyArray = null;
		value = null;
		
		if(msg.getBody()!=null){
			marshallingEncoder.encode(ctx, msg.getBody(), sendBuf);
		}else{
			sendBuf.writeInt(0);
		}
		
		sendBuf.setInt(4, sendBuf.readableBytes());//重新写入数据占用的大小
		
		out.add(sendBuf);//写出数据。
		
	}
	
	public static void main(String[] args) {
		Integer a = 0x00000C;
		byte by = (byte)a;
	}

}
