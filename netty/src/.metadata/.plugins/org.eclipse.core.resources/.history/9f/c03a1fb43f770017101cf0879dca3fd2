package com.hello.netty.xieyi.coder;

import java.nio.ByteOrder;

import com.hello.netty.xieyi.coder.util.MarshallingCodeCFactory;
import com.hello.netty.xieyi.coder.util.NettyMarshallingD;
import com.hello.netty.xieyi.entry.Header;
import com.hello.netty.xieyi.entry.NettyMessage;

import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandlerContext;
import io.netty.handler.codec.LengthFieldBasedFrameDecoder;

public class NettyMessageDecoder extends LengthFieldBasedFrameDecoder {

	private NettyMarshallingD marshallingDecoder; 
	public NettyMessageDecoder(ByteOrder byteOrder, int maxFrameLength, int lengthFieldOffset, int lengthFieldLength,
			int lengthAdjustment, int initialBytesToStrip, boolean failFast) {
		super(byteOrder, maxFrameLength, lengthFieldOffset, lengthFieldLength, lengthAdjustment, initialBytesToStrip, failFast);
		
		this.marshallingDecoder = MarshallingCodeCFactory.buildMarshallingDecoder();
	}
	
	/*解码*/
	@Override
	protected Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception {
		ByteBuf frame = (ByteBuf) super.decode(ctx, in);
		NettyMessage message = new NettyMessage();//实例化协议
		
		Header header =  new Header();
		
		return message;
	}

	
	
	
}
